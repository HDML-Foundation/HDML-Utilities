// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ConnectionParametersStruct, unionToConnectionParametersStruct, unionListToConnectionParametersStruct } from '../document/connection-parameters-struct.js';
import { ConnectorTypesEnum } from '../enum/connector-types-enum.js';


/**
 * Database connection options structure.
 */
export class ConnectionOptionsStruct {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ConnectionOptionsStruct {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsConnectionOptionsStruct(bb:flatbuffers.ByteBuffer, obj?:ConnectionOptionsStruct):ConnectionOptionsStruct {
  return (obj || new ConnectionOptionsStruct()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsConnectionOptionsStruct(bb:flatbuffers.ByteBuffer, obj?:ConnectionOptionsStruct):ConnectionOptionsStruct {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ConnectionOptionsStruct()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

connector():ConnectorTypesEnum {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ConnectorTypesEnum.Postgres;
}

parametersType():ConnectionParametersStruct {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ConnectionParametersStruct.NONE;
}

parameters<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startConnectionOptionsStruct(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addConnector(builder:flatbuffers.Builder, connector:ConnectorTypesEnum) {
  builder.addFieldInt8(0, connector, ConnectorTypesEnum.Postgres);
}

static addParametersType(builder:flatbuffers.Builder, parametersType:ConnectionParametersStruct) {
  builder.addFieldInt8(1, parametersType, ConnectionParametersStruct.NONE);
}

static addParameters(builder:flatbuffers.Builder, parametersOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, parametersOffset, 0);
}

static endConnectionOptionsStruct(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createConnectionOptionsStruct(builder:flatbuffers.Builder, connector:ConnectorTypesEnum, parametersType:ConnectionParametersStruct, parametersOffset:flatbuffers.Offset):flatbuffers.Offset {
  ConnectionOptionsStruct.startConnectionOptionsStruct(builder);
  ConnectionOptionsStruct.addConnector(builder, connector);
  ConnectionOptionsStruct.addParametersType(builder, parametersType);
  ConnectionOptionsStruct.addParameters(builder, parametersOffset);
  return ConnectionOptionsStruct.endConnectionOptionsStruct(builder);
}
}
